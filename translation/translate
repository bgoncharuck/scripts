#!/bin/bash
help()
{
  echo -e "translate \"abc\" \"klf\" \"text\""
  echo ""
  echo -e "translate \"a b c\" \"symbols symbols symbols\" \"text\""
  echo -e "translate -d \":\" \"a:b:c\" \"symbols:symbols:symbols\" \"text\""
  echo ""
  echo -e "translate \"symbols symbols c\" \"a symbols lol\" \"text\""
}

translate()
{
  result="$3"

  if [[ "$delimeter" = "" ]]; then
    result="$(echo "$result" | tr "$1" "$2" )"
  else
    IFS="$delimeter" read -ra fromArray <<< "$1"
    IFS="$delimeter" read -ra toArray <<< "$2"
    if [[ "$delimeter" != "/" ]]; then
      for curIndex in $(seq "${#fromArray[@]}")
      do
        result="${result//${fromArray[curIndex-1]}/${toArray[curIndex-1]}}"
      done
    else
      for curIndex in $(seq "${#fromArray[@]}")
      do
        result="$(echo "$result" | sed -e "s:${fromArray[curIndex-1]}:${toArray[curIndex-1]}:g")"
      done
    fi
  fi

  echo "$result"
}

#arguments
if ! [[ "$#" =~ ^[1,3,5]$ ]]; then
  help
  exit 2
fi

delimeterUsed=false
delimeter=" "

while getopts h?d: option
do
  case "${option}" in
    h)
    help
    exit 0
    ;;
    d)
    delimeterUsed=true
    delimeter=${OPTARG}
    ;;
  esac
done

for curArgIndex in $(seq $#)
do
  case "${!curArgIndex+1}" in
    -d)
      if [[ "$curArgIndex" -eq 0 ]]; then
      break; else
      help
      exit 2
      fi
    ;;
    -*)
      help
      exit 2
    ;;
  esac
done

if [ "$delimeterUsed" = false ]; then
  spacesInFrom="$(echo "$1" | grep -o ' ' | wc -l )"
  spacesInTo="$(echo "$2" | grep -o ' ' | wc -l )"
else
  spacesInFrom="$(echo "${3}" | awk -F"${delimeter}" '{print NF-1}')"
  spacesInTo="$(echo "${4}" | awk -F"${delimeter}" '{print NF-1}')"
fi

if [ "$spacesInFrom" -eq 0 ] && [ "$spacesInTo" -eq 0 ]; then
  if [ "${#1}" -ne "${#2}" ]; then
    exit 1
  fi
  delimeter=""
else
  if [ "$spacesInTo" -ne "$spacesInFrom" ]; then
    exit 2
  fi
fi

#translation
if [ "$delimeterUsed" = false ]; then
  translate "$1" "$2" "$3"
else
  translate "$3" "$4" "$5"
fi
