#!/bin/bash
help()
{
  echo -e "translate \"abc\" \"klf\" \"text\""
  echo ""
  echo -e "translate \"a b c\" \"symbols symbols symbols\" \"text\""
  echo -e "translate -d \":\" \"a:b:c\" \"symbols:symbols:symbols\" \"text\""
  echo ""
  echo -e "translate \"symbols symbols c\" \"a symbols lol\" \"text\""
}

translate()
{
  result="$3"

  # split strings into substrings
  case "$delimiter" in
    "")
      mapfile -t fromArray < <(echo "$1"| grep -o .)
      mapfile -t toArray < <(echo "$2"| grep -o .)
    ;;
    *)
      IFS="$delimiter" read -ra fromArray <<< "$1"
      IFS="$delimiter" read -ra toArray <<< "$2"
    ;;
  esac

  # replace every pair of substrings
  for ((curIndex=0; curIndex < "${#fromArray[@]}"; curIndex++)); do
    result="${result//${fromArray[curIndex]}/${toArray[curIndex]}}"
  done

  echo "$result"
}

#arguments
if ! [[ "$#" =~ ^[1,3,5]$ ]]; then
  help
  exit 2
fi

delimiterUsed=false
delimiter=" "

while getopts h?d: option; do
  case "${option}" in
    h)
      help
      exit 0
    ;;
    d)
      delimiterUsed=true
      delimiter=${OPTARG}
    ;;
  esac
done

for ((curArgIndex=0; curArgIndex < $#; curArgIndex++)); do
  case "${!curArgIndex+1}" in
    -d)
      if [[ "$curArgIndex" -eq 0 ]]; then
        break; else
        help
        exit 2
      fi
    ;;
    -*)
      help
      exit 2
    ;;
  esac
done

if [ "$delimiterUsed" = false ]; then
  spacesInFrom="$(echo "$1" | grep -o ' ' | wc -l )"
  spacesInTo="$(echo "$2" | grep -o ' ' | wc -l )"
else
  spacesInFrom="$(echo "${3}" | awk -F"${delimiter}" '{print NF-1}')"
  spacesInTo="$(echo "${4}" | awk -F"${delimiter}" '{print NF-1}')"
fi

if [ "$spacesInFrom" -eq 0 ] && [ "$spacesInTo" -eq 0 ]; then
  if [ "${#1}" -ne "${#2}" ]; then
    exit 1
  fi
  delimiter=""
else
  if [ "$spacesInTo" -ne "$spacesInFrom" ]; then
    exit 2
  fi
fi

#translation
if [ "$delimiterUsed" = false ]; then
  translate "$1" "$2" "$3"
else
  translate "$3" "$4" "$5"
fi
