#!/bin/bash
help()
{
  echo -e "rangeTranslate \"6\" \"abcde\" \"k\" \"text\""
  echo ""
  echo -e "rangeTranslate \"16\" \"16characters 16characters 16characters\" \"129characters 1character 16characters\" \"text\""
  echo -e "rangeTranslate \"99\" -d \":\" \"99characters:99characters:99characters\" \"anycharacters:anycharacters:anycharacters\" \"text\""
}

rangeTranslate()
{
  IFS="$delimeter" read -ra fromArray <<< "$1"
  IFS="$delimeter" read -ra toArray <<< "$2"
  declare -A translateMap

  curIndex=0
  for from in "${fromArray[@]}"; do
    translateMap["$from"]="${toArray[curIndex]}"
    ((curIndex++))
  done

  lengthOfInput="${#inputString}"
  result=""
  for ((curPos=0; "$curPos" < "$lengthOfInput"; curPos="$curPos"+"$range")); do

    currentRange="${inputString:curPos:$range}"

    [[ -z "${translateMap["$currentRange"]+unset}" ]] && currentTranslate="$currentRange" || currentTranslate="${translateMap["$currentRange"]}"

    result="$result$currentTranslate"
  done

  echo "$result"
}

#arguments
if ! [[ "$#" =~ ^[1,4,6]$ ]]; then
  help
  exit 2
fi

case "$#" in
  1)
    help
    if [ "$1" != "-h" ]; then
      exit 2; else exit 0; fi
  ;;
  4)
    if ! [[ "$1" =~ ^[0-9]+$ ]]; then
      help; exit 2; fi
    inputString="$4"
    delimeter=" "
  ;;
  6)
    if [ "$2" != "-d" ] || ! [[ "$1" =~ ^[0-9]+$ ]]; then
      help; exit 2; fi
    inputString="$6"
    delimeter="$3"
  ;;
esac
range="$1"

#translate
if [ "$#" -eq 4 ]; then
  rangeTranslate "$2" "$3" "$4"
else
  rangeTranslate "$4" "$5" "$6"
fi
